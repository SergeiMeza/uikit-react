var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import Button from '../../Elements/Button/Button';
import Input from '../../Elements/Input/Input';
import SelectMenu from '../../Elements/SelectMenu/SelectMenu';
export var TwoColumnsCardsFormLayout = function (_a) {
    return (_jsxs(_Fragment, { children: [_jsx("div", { children: _jsxs("div", __assign({ className: "md:grid md:grid-cols-3 md:gap-6" }, { children: [_jsx("div", __assign({ className: "md:col-span-1" }, { children: _jsxs("div", __assign({ className: "px-4 sm:px-0" }, { children: [_jsx("h3", __assign({ className: "text-lg font-medium leading-6 text-gray-900" }, { children: "Profile" }), void 0), _jsx("p", __assign({ className: "mt-1 text-sm text-gray-600" }, { children: "This information will be displayed publicly so be careful what you share." }), void 0)] }), void 0) }), void 0), _jsx("div", __assign({ className: "mt-5 md:mt-0 md:col-span-2" }, { children: _jsx("form", __assign({ action: "#", method: "POST" }, { children: _jsxs("div", __assign({ className: "shadow sm:rounded-md sm:overflow-hidden" }, { children: [_jsxs("div", __assign({ className: "px-4 py-5 bg-white space-y-6 sm:p-6" }, { children: [_jsx("div", __assign({ className: "grid grid-cols-3 gap-6" }, { children: _jsx("div", __assign({ className: "col-span-3 sm:col-span-2" }, { children: _jsx(Input, { type: Input.type.text, label: "Website", name: "companyWebsite", placeholder: "www.example.com", autoComplete: "url", trimmed: true, prefix: "https://", description: "" }, void 0) }), void 0) }), void 0), _jsx("div", { children: _jsx(Input.TextArea, { name: "about", label: "About", rows: 3, defaultValue: '', placeholder: "you@example.com", description: "Brief description of your profile. URLs are hyperlinked." }, void 0) }, void 0), _jsxs("div", { children: [_jsx("label", __assign({ className: "block text-sm font-medium text-gray-700" }, { children: "Photo" }), void 0), _jsxs("div", __assign({ className: "mt-1 flex items-center" }, { children: [_jsx("span", __assign({ className: "inline-block h-12 w-12 rounded-full overflow-hidden bg-gray-100" }, { children: _jsx("svg", __assign({ className: "h-full w-full text-gray-300", fill: "currentColor", viewBox: "0 0 24 24" }, { children: _jsx("path", { d: "M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z" }, void 0) }), void 0) }), void 0), _jsx(Button, { className: "ml-5", type: "button", title: "Change", buttonType: Button.buttonType.outline, size: Button.size.medium, onClick: function () { return console.log('onFileUpload'); } }, void 0)] }), void 0)] }, void 0), _jsx("div", { children: _jsx(Input.File, { label: "Cover photo", name: "coverPhoto", icon: _jsx("svg", __assign({ className: "mx-auto h-12 w-12 text-gray-400", stroke: "currentColor", fill: "none", viewBox: "0 0 48 48", "aria-hidden": "true" }, { children: _jsx("path", { d: "M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02", strokeWidth: 2, strokeLinecap: "round", strokeLinejoin: "round" }, void 0) }), void 0), title: _jsxs("span", { children: [_jsx("span", __assign({ className: "text-primary-600 hover:text-primary-500" }, { children: "Upload a file" }), void 0), ' ', "or drag and drop"] }, void 0), description: "PNG, JPG, GIF up to 10MB", onClick: function () { return console.log('onFileUpload'); }, accept: "image/png,image/jpeg,image/gif" }, void 0) }, void 0)] }), void 0), _jsx("div", __assign({ className: "px-4 py-3 bg-gray-50 text-right sm:px-6" }, { children: _jsx(Button, { className: "inline-flex justify-center", type: "submit", title: "Save", size: Button.size.large }, void 0) }), void 0)] }), void 0) }), void 0) }), void 0)] }), void 0) }, void 0), _jsx("div", __assign({ className: "hidden sm:block", "aria-hidden": "true" }, { children: _jsx("div", __assign({ className: "py-5" }, { children: _jsx("div", { className: "border-t border-gray-200" }, void 0) }), void 0) }), void 0), _jsx("div", __assign({ className: "mt-10 sm:mt-0" }, { children: _jsxs("div", __assign({ className: "md:grid md:grid-cols-3 md:gap-6" }, { children: [_jsx("div", __assign({ className: "md:col-span-1" }, { children: _jsxs("div", __assign({ className: "px-4 sm:px-0" }, { children: [_jsx("h3", __assign({ className: "text-lg font-medium leading-6 text-gray-900" }, { children: "Personal Information" }), void 0), _jsx("p", __assign({ className: "mt-1 text-sm text-gray-600" }, { children: "Use a permanent address where you can receive mail." }), void 0)] }), void 0) }), void 0), _jsx("div", __assign({ className: "mt-5 md:mt-0 md:col-span-2" }, { children: _jsx("form", __assign({ action: "#", method: "POST" }, { children: _jsxs("div", __assign({ className: "shadow overflow-hidden sm:rounded-md" }, { children: [_jsx("div", __assign({ className: "px-4 py-5 bg-white sm:p-6" }, { children: _jsxs("div", __assign({ className: "grid grid-cols-6 gap-6" }, { children: [_jsx("div", __assign({ className: "col-span-6 sm:col-span-3" }, { children: _jsx(Input, { type: "text", label: "First name", name: "firstName", placeholder: "", autoComplete: "given-name", description: "" }, void 0) }), void 0), _jsx("div", __assign({ className: "col-span-6 sm:col-span-3" }, { children: _jsx(Input, { type: "text", label: "Last name", name: "lastName", placeholder: "", autoComplete: "family-name", description: "" }, void 0) }), void 0), _jsx("div", __assign({ className: "col-span-6 sm:col-span-4" }, { children: _jsx(Input, { type: Input.type.email, label: "Email address", name: "email", placeholder: "", autoComplete: "email", description: "" }, void 0) }), void 0), _jsx("div", __assign({ className: "col-span-6 sm:col-span-3" }, { children: _jsx(SelectMenu, { label: "Country / Region", name: "country", autoComplete: "country", options: [
                                                                { name: 'United States', value: 'usa' },
                                                                { name: 'Canada', value: 'canada' },
                                                                { name: 'Mexico', value: 'mexico' },
                                                                { name: 'Japan', value: 'japan' },
                                                            ], selectedItem: { name: 'United States', value: 'usa' } }, void 0) }), void 0), _jsx("div", __assign({ className: "col-span-6" }, { children: _jsx(Input, { type: "text", autoComplete: "street-address", name: "streetAddress", label: "Street address", placeholder: "", description: "" }, void 0) }), void 0), _jsx("div", __assign({ className: "col-span-6 sm:col-span-6 lg:col-span-2" }, { children: _jsx(Input, { type: "text", autoComplete: "address-level2", name: "city", label: "City", placeholder: "", description: "" }, void 0) }), void 0), _jsx("div", __assign({ className: "col-span-6 sm:col-span-3 lg:col-span-2" }, { children: _jsx(Input, { type: "text", autoComplete: "address-level1", name: "state", label: "State / Province", placeholder: "", description: "" }, void 0) }), void 0), _jsx("div", __assign({ className: "col-span-6 sm:col-span-3 lg:col-span-2" }, { children: _jsx(Input, { type: "text", autoComplete: "postal-code", name: "zip", label: "ZIP / Postal", placeholder: "", description: "" }, void 0) }), void 0)] }), void 0) }), void 0), _jsx("div", __assign({ className: "px-4 py-3 bg-gray-50 text-right sm:px-6" }, { children: _jsx(Button, { className: "inline-flex justify-center", type: "submit", title: "Save", size: Button.size.large }, void 0) }), void 0)] }), void 0) }), void 0) }), void 0)] }), void 0) }), void 0), _jsx("div", __assign({ className: "hidden sm:block", "aria-hidden": "true" }, { children: _jsx("div", __assign({ className: "py-5" }, { children: _jsx("div", { className: "border-t border-gray-200" }, void 0) }), void 0) }), void 0), _jsx("div", __assign({ className: "mt-10 sm:mt-0" }, { children: _jsxs("div", __assign({ className: "md:grid md:grid-cols-3 md:gap-6" }, { children: [_jsx("div", __assign({ className: "md:col-span-1" }, { children: _jsxs("div", __assign({ className: "px-4 sm:px-0" }, { children: [_jsx("h3", __assign({ className: "text-lg font-medium leading-6 text-gray-900" }, { children: "Notifications" }), void 0), _jsx("p", __assign({ className: "mt-1 text-sm text-gray-600" }, { children: "Decide which communications you'd like to receive and how." }), void 0)] }), void 0) }), void 0), _jsx("div", __assign({ className: "mt-5 md:mt-0 md:col-span-2" }, { children: _jsx("form", __assign({ action: "#", method: "POST" }, { children: _jsxs("div", __assign({ className: "shadow overflow-hidden sm:rounded-md" }, { children: [_jsxs("div", __assign({ className: "px-4 py-5 bg-white space-y-6 sm:p-6" }, { children: [_jsx(Input.CheckboxGroup, { label: "By Email", items: [
                                                        {
                                                            name: 'comments',
                                                            title: 'Comments',
                                                            description: 'Get notified when someones posts a comment on a posting.',
                                                            checked: false,
                                                        },
                                                        {
                                                            name: 'candidates',
                                                            title: 'Candidates',
                                                            description: 'Get notified when a candidate applies for a job.',
                                                            checked: false,
                                                        },
                                                        {
                                                            name: 'offers',
                                                            title: 'Offers',
                                                            description: 'Get notified when a candidate accepts or rejects an offer.',
                                                            checked: false,
                                                        },
                                                    ] }, void 0), _jsx(Input.RadioGroup, {}, void 0)] }), void 0), _jsx("div", __assign({ className: "px-4 py-3 bg-gray-50 text-right sm:px-6" }, { children: _jsx(Button, { className: "inline-flex justify-center", type: "submit", title: "Save", size: Button.size.large }, void 0) }), void 0)] }), void 0) }), void 0) }), void 0)] }), void 0) }), void 0)] }, void 0));
};
export default TwoColumnsCardsFormLayout;
